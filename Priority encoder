# Procedures
过程包括始终，初始，任务和功能块。 过程允许使用顺序语句（不能在过程外部使用）来描述电路的行为。

编码器：
在数字系统里，常常需要将某一信息（输入）变换为某一特定的代码（输出）。把二进制码按一定的规律编排，
例如8421码、格雷码等，使每组代码具有一特定的含义（代表某个数字或控制信号）称为编码。具有编码功能的逻辑电路称为编码器。
编码器有若干个输入，在某一时刻只有一个输入信号被转换成为二进制码。   

优先编码器：
是当多个输入端同时有信号时,电路只对其中优先级别最高bai的输入信号进行编码。


两种方式：// synthesis verilog_input_version verilog_2001
module top_module (
    input [3:0] in,
    output reg [1:0] pos  );
   
   always  @ (*)begin
       case(in)
       4'b0000: pos = 2'b00;
            4'b0001: pos = 2'b00;
            4'b0010: pos = 2'b01;
            4'b0011: pos = 2'b00;
            4'b0100: pos = 2'b10;
            4'b0101: pos = 2'b00;
            4'b0110: pos = 2'b01;
            4'b0111: pos = 2'b00;
            4'b1000: pos = 2'b11;
            4'b1001: pos = 2'b00;
            4'b1010: pos = 2'b01;
            4'b1011: pos = 2'b00;
            4'b1100: pos = 2'b10;
            4'b1101: pos = 2'b00;
            4'b1110: pos = 2'b01;
            4'b1111: pos = 2'b00;
        endcase
    end
endmodule

方法二：
    always@(*)begin
        case(in)
            4'b0001:pos = 2'd0;
            4'b0010:pos = 2'd1;
            4'b0011:pos = 2'd0;
            4'b0100:pos = 2'd2;
            4'b0101:pos = 2'd0;
            4'b0110:pos = 2'd1;
            4'b0111:pos = 2'd0;
            4'b1000:pos = 2'd3;
            4'b1001:pos = 2'd0;
            4'b1010:pos = 2'd1;
            4'b1011:pos = 2'd0;
            4'b1100:pos = 2'd2;
            4'b1101:pos = 2'd0;
            4'b1110:pos = 2'd1;
            4'b1111:pos = 2'd0;
       
            default:pos = 2'd0;
        endcase
    end



方法三：
always @(*) begin
    casez (in[3:0])
        4'bzzz1: out = 0;   // in[3:1] can be anything
        4'bzz1z: out = 1;
        4'bz1zz: out = 2;
        4'b1zzz: out = 3;
        default: out = 0;
    endcase
end


//总结:
其实我不明白什么意思，只是编译了一下参考代码。
